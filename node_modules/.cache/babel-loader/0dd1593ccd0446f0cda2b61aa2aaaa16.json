{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nguyen Cuong\\\\Desktop\\\\react-basic\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Routers from './routers';\nimport apiRequest from './api/productApi';\nimport apiRequestCategory from './api/categoryApi';\nimport apiPost from './api/postApi'; // import AddProduct from './components/AddProduct';\n\nfunction App() {\n  const [products, setProducts] = useState([apiRequest]);\n  const [category, setCategory] = useState([apiRequestCategory]);\n  const [post, setPost] = useState([apiPost]);\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const {\n          data\n        } = await apiRequest.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log('failed to request API: ', error);\n      }\n    };\n\n    getProducts();\n  }, []); //Xóa sản phẩm\n\n  const onHandleRemove = async id => {\n    try {\n      const {\n        data\n      } = await apiRequest.remove(id);\n      const newProducts = products.filter(product => product.id !== id);\n      setProducts(newProducts);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  }; //Thêm sản phẩm \n\n\n  const onHandleAdd = async product => {\n    try {\n      const {\n        data\n      } = await apiRequest.create(product);\n      setProducts([...products, data]);\n    } catch (error) {\n      console.log('failed to request API: ', error);\n    }\n  }; // Cập nhật Products\n\n\n  const onHandleEdit = async updateProducts => {\n    const newProducts = products.map(Products => Products.id === updateProducts.id ? updateProducts : Products // Nếu Products.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    );\n    const {\n      data\n    } = await apiRequest.update(updateProducts.id, updateProducts);\n    setProducts(newProducts);\n  }; // Danh sách danh mục \n\n\n  useEffect(() => {\n    const getCategory = async () => {\n      try {\n        const {\n          data\n        } = await apiRequestCategory.getAll();\n        setCategory(data);\n      } catch (error) {\n        console.log('failed to request API: ', error);\n      }\n    };\n\n    getCategory();\n  }, []); //Xoá danh mục\n\n  const onCategoryRemove = async id => {\n    try {\n      const {\n        data\n      } = await apiRequestCategory.remove(id);\n      const newCategory = category.filter(categories => categories.id !== id);\n      setCategory(newCategory);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  }; //Thêm danh mục\n\n\n  const onHandleAddCate = async categories => {\n    try {\n      const {\n        data\n      } = await apiRequestCategory.create(categories);\n      setCategory([...category, data]);\n    } catch (error) {\n      console.log('failed to request API: ', error);\n    }\n  }; //Sửa danh mục\n\n\n  const onHandleEditCate = async updateCategories => {\n    const newCategories = category.map(Categories => Categories.id === updateCategories.id ? updateCategories : Categories // Nếu Categories.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    );\n    const {\n      data\n    } = await apiRequestCategory.update(updateCategories.id, updateCategories);\n    setCategory(newCategories);\n  }; //Danh sách post\n\n\n  useEffect(() => {\n    const getPost = async () => {\n      try {\n        const {\n          data\n        } = await apiPost.getAll();\n        setPost(data);\n      } catch (error) {\n        console.log('failed to request API: ', error);\n      }\n    };\n\n    getPost();\n  }, []); //Xoá bài viết\n\n  const onPostRemove = async id => {\n    try {\n      const {\n        data\n      } = await apiPost.remove(id);\n      const newPost = post.filter(posts => posts.id !== id);\n      setPost(newPost);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  }; //Thêm bài viết\n\n\n  const onHandleAddPost = async posts => {\n    try {\n      const {\n        data\n      } = await apiPost.create(posts);\n      setPost([...post, data]);\n    } catch (error) {\n      console.log('failed to request API: ', error);\n    }\n  }; //Sửa bài viết\n\n\n  const onHandleEditPost = async updatePosts => {\n    const newPosts = post.map(Posts => Posts.id === updatePosts.id ? updatePosts : Posts // Nếu Posts.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    );\n    const {\n      data\n    } = await apiPost.update(updatePosts.id, updatePosts);\n    setPost(newPosts);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Routers, {\n    category: category,\n    onRemoveCate: onCategoryRemove,\n    onAddCate: onHandleAddCate,\n    onEditCate: onHandleEditCate,\n    products: products,\n    onRemove: onHandleRemove,\n    onAdd: onHandleAdd,\n    onEdit: onHandleEdit,\n    post: post,\n    onRemovePost: onPostRemove,\n    onAddPost: onHandleAddPost,\n    onEditPost: onHandleEditPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Nguyen Cuong/Desktop/react-basic/src/App.js"],"names":["React","useState","useEffect","Routers","apiRequest","apiRequestCategory","apiPost","App","products","setProducts","category","setCategory","post","setPost","getProducts","data","getAll","error","console","log","onHandleRemove","id","remove","newProducts","filter","product","onHandleAdd","create","onHandleEdit","updateProducts","map","Products","update","getCategory","onCategoryRemove","newCategory","categories","onHandleAddCate","onHandleEditCate","updateCategories","newCategories","Categories","getPost","onPostRemove","newPost","posts","onHandleAddPost","onHandleEditPost","updatePosts","newPosts","Posts"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react';\r\nimport Routers from './routers'\r\nimport apiRequest from './api/productApi'\r\nimport apiRequestCategory from './api/categoryApi'\r\nimport apiPost from './api/postApi'\r\n\r\n// import AddProduct from './components/AddProduct';\r\nfunction App() {\r\n\r\n  const [products, setProducts] = useState([apiRequest]);\r\n  const [category, setCategory] = useState([apiRequestCategory]);\r\n  const [post, setPost] = useState([apiPost]);\r\n\r\n  useEffect(() => {\r\n    const getProducts = async () => {\r\n      try {\r\n        const { data } = await apiRequest.getAll();\r\n        setProducts(data);\r\n      } catch (error) {\r\n        console.log('failed to request API: ', error)\r\n      }\r\n    }\r\n    getProducts();\r\n  }, []);\r\n\r\n  //Xóa sản phẩm\r\n  const onHandleRemove = async (id) => {\r\n    try {\r\n      const { data } = await apiRequest.remove(id);\r\n      const newProducts = products.filter((product) => product.id !== id);\r\n      setProducts(newProducts);\r\n    } catch (error) {\r\n      console.log(\"failed to request API: \", error);\r\n    }\r\n  };\r\n\r\n  //Thêm sản phẩm \r\n  const onHandleAdd = async (product) => {\r\n    try {\r\n      const { data } = await apiRequest.create(product);\r\n      setProducts([\r\n        ...products,\r\n        data\r\n      ])\r\n    } catch (error) {\r\n      console.log('failed to request API: ', error)\r\n    }\r\n  }\r\n\r\n  // Cập nhật Products\r\n  const onHandleEdit = async (updateProducts) => {\r\n    const newProducts = products.map(\r\n      (Products) =>\r\n        Products.id === updateProducts.id ? updateProducts : Products // Nếu Products.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\r\n    );\r\n    const { data } = await apiRequest.update(updateProducts.id, updateProducts);\r\n    setProducts(newProducts);\r\n  };\r\n\r\n  // Danh sách danh mục \r\n  useEffect(() => {\r\n    const getCategory = async () => {\r\n      try {\r\n        const { data } = await apiRequestCategory.getAll();\r\n        setCategory(data);\r\n      } catch (error) {\r\n        console.log('failed to request API: ', error)\r\n      }\r\n    }\r\n    getCategory();\r\n  }, []);\r\n\r\n  //Xoá danh mục\r\n  const onCategoryRemove = async (id) => {\r\n    try {\r\n      const { data } = await apiRequestCategory.remove(id);\r\n      const newCategory = category.filter(( categories )  => categories.id !== id);\r\n      setCategory(newCategory);\r\n    } catch (error) {\r\n      console.log(\"failed to request API: \", error);\r\n    }\r\n  };\r\n\r\n  //Thêm danh mục\r\n  const onHandleAddCate = async ( categories ) => {\r\n    try {\r\n      const { data } = await apiRequestCategory.create(categories);\r\n      setCategory([\r\n        ...category,\r\n        data\r\n      ])\r\n    } catch (error) {\r\n      console.log('failed to request API: ', error)\r\n    }\r\n  }\r\n\r\n  //Sửa danh mục\r\n  const onHandleEditCate = async (updateCategories) => {\r\n    const newCategories = category.map(\r\n      (Categories) =>\r\n      Categories.id === updateCategories.id ? updateCategories : Categories // Nếu Categories.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\r\n    );\r\n    const { data } = await apiRequestCategory.update(updateCategories.id, updateCategories);\r\n    setCategory(newCategories);\r\n  };\r\n\r\n  //Danh sách post\r\n  useEffect(() => {\r\n    const getPost = async () => {\r\n      try {\r\n        const { data } = await apiPost.getAll();\r\n        setPost(data);\r\n      } catch (error) {\r\n        console.log('failed to request API: ', error)\r\n      }\r\n    }\r\n    getPost();\r\n  }, []);\r\n\r\n  //Xoá bài viết\r\n  const onPostRemove = async (id) => {\r\n    try {\r\n      const { data } = await apiPost.remove(id);\r\n      const newPost = post.filter(( posts )  => posts.id !== id);\r\n      setPost(newPost);\r\n    } catch (error) {\r\n      console.log(\"failed to request API: \", error);\r\n    }\r\n  };\r\n\r\n  //Thêm bài viết\r\n  const onHandleAddPost = async ( posts ) => {\r\n    try {\r\n      const { data } = await apiPost.create(posts);\r\n      setPost([\r\n        ...post,\r\n        data\r\n      ])\r\n    } catch (error) {\r\n      console.log('failed to request API: ', error)\r\n    }\r\n  }\r\n\r\n  //Sửa bài viết\r\n  const onHandleEditPost = async (updatePosts) => {\r\n    const newPosts = post.map(\r\n      (Posts) =>\r\n      Posts.id === updatePosts.id ? updatePosts : Posts // Nếu Posts.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\r\n    );\r\n    const { data } = await apiPost.update(updatePosts.id, updatePosts);\r\n    setPost(newPosts);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Routers category = {category}\r\n               onRemoveCate = {onCategoryRemove}\r\n               onAddCate = {onHandleAddCate}\r\n               onEditCate = {onHandleEditCate}\r\n               products = {products} \r\n               onRemove = {onHandleRemove} \r\n               onAdd = {onHandleAdd} \r\n               onEdit = {onHandleEdit} \r\n               post = {post}\r\n               onRemovePost = {onPostRemove}\r\n               onAddPost = {onHandleAddPost}\r\n               onEditPost = {onHandleEditPost}\r\n      />\r\n    </div>\r\n  )\r\n\r\n}\r\nexport default App;"]},"metadata":{},"sourceType":"module"}