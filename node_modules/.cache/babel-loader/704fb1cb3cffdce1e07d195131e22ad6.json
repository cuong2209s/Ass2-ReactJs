{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nguyen Cuong\\\\Desktop\\\\react-basic\\\\src\\\\pages\\\\views\\\\Admin\\\\Post\\\\PostEdit.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from \"lodash/fp\";\nimport { useForm } from \"react-hook-form\";\nimport { useParams, useHistory } from 'react-router-dom';\n\nconst PostEdit = ({\n  post,\n  onEditPost\n}) => {\n  let {\n    id\n  } = useParams();\n  let history = useHistory();\n  let posted = post.find(data => data.id == id);\n  console.log(posted);\n  const [currentPost, setCurrentPost] = useState(posted);\n\n  const onSubmitPost = e => {\n    onEditPost(currentPost);\n    history.push(\"/admin/post\");\n  };\n\n  const onHandleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCurrentPost({ ...currentPost,\n      [name]: value\n    });\n  };\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors\n  } = useForm();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmitPost),\n    className: \"w-50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"postTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, \"Ti\\xEAu \\u0111\\u1EC1\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    defaultValue: currentPost.name,\n    onChange: onHandleChange,\n    className: \"form-control\",\n    ref: register({\n      required: true,\n      maxLength: 30\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }), _.get(\"title.type\", errors) === \"required\" && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 69\n    }\n  }, \"T\\xEAn ti\\xEAu \\u0111\\u1EC1 kh\\xF4ng \\u0111\\u01B0\\u1EE3c \\u0111\\u1EC3 tr\\u1ED1ng\"), _.get(\"title.type\", errors) === \"maxLength\" && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 70\n    }\n  }, \"T\\xEAn ti\\xEAu \\u0111\\u1EC1 kh\\xF4ng qu\\xE1 30 k\\xFD t\\u1EF1\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"postTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, \"Ti\\xEAu \\u0111\\u1EC1\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    defaultValue: currentPost.name,\n    onChange: onHandleChange,\n    className: \"form-control\",\n    ref: register({\n      required: true,\n      maxLength: 30\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }), _.get(\"title.type\", errors) === \"required\" && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 69\n    }\n  }, \"T\\xEAn s\\u1EA3n ph\\u1EA9m kh\\xF4ng \\u0111\\u01B0\\u1EE3c \\u0111\\u1EC3 tr\\u1ED1ng\"), _.get(\"title.type\", errors) === \"maxLength\" && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 70\n    }\n  }, \"T\\xEAn s\\u1EA3n ph\\u1EA9m kh\\xF4ng qu\\xE1 30 k\\xFD t\\u1EF1\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \"C\\u1EADp nh\\u1EADt\")));\n};\n\nPostEdit.propTypes = {};\nexport default PostEdit;","map":{"version":3,"sources":["C:/Users/Nguyen Cuong/Desktop/react-basic/src/pages/views/Admin/Post/PostEdit.js"],"names":["React","useState","PropTypes","_","useForm","useParams","useHistory","PostEdit","post","onEditPost","id","history","posted","find","data","console","log","currentPost","setCurrentPost","onSubmitPost","e","push","onHandleChange","name","value","target","register","handleSubmit","watch","errors","required","maxLength","get","color","propTypes"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport _ from \"lodash/fp\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useParams, useHistory } from  'react-router-dom';\r\n\r\nconst PostEdit = ({ post, onEditPost }) => {\r\n    \r\n    let {id} = useParams();\r\n    let history = useHistory();\r\n    let posted = post.find((data) => data.id == id);\r\n    console.log(posted)\r\n    const [currentPost, setCurrentPost] = useState(posted);\r\n    const onSubmitPost = (e) => {\r\n        onEditPost(currentPost);\r\n        history.push(\"/admin/post\");\r\n        };\r\n\r\n    const onHandleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setCurrentPost({\r\n          ...currentPost,\r\n          [name]: value,\r\n        });\r\n      };\r\n\r\n    \r\n\r\n    const { register, handleSubmit, watch, errors } = useForm();  \r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit(onSubmitPost)} className=\"w-50\">\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"postTitle\">Tiêu đề</label>\r\n                    <input type=\"text\" name=\"name\" \r\n                    defaultValue={currentPost.name} \r\n                    onChange={onHandleChange} \r\n                    className=\"form-control\"\r\n                    ref={register({\r\n                        required: true,\r\n                        maxLength: 30,\r\n                      })} \r\n                   />\r\n                    {_.get(\"title.type\", errors) === \"required\" && (<span style = {{ color: \"red\" }}>Tên tiêu đề không được để trống</span>)}\r\n                    {_.get(\"title.type\", errors) === \"maxLength\" && (<span style = {{ color: \"red\" }}>Tên tiêu đề không quá 30 ký tự</span>)}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"postTitle\">Tiêu đề</label>\r\n                    <input type=\"text\" name=\"name\" \r\n                    defaultValue={currentPost.name} \r\n                    onChange={onHandleChange} \r\n                    className=\"form-control\"\r\n                    ref={register({\r\n                        required: true,\r\n                        maxLength: 30,\r\n                      })} \r\n                   />\r\n                    {_.get(\"title.type\", errors) === \"required\" && (<span style = {{ color: \"red\" }}>Tên sản phẩm không được để trống</span>)}\r\n                    {_.get(\"title.type\", errors) === \"maxLength\" && (<span style = {{ color: \"red\" }}>Tên sản phẩm không quá 30 ký tự</span>)}\r\n                </div>\r\n                <button className=\"btn btn-primary\">Cập nhật</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nPostEdit.propTypes = {\r\n\r\n}\r\n\r\nexport default PostEdit\r\n"]},"metadata":{},"sourceType":"module"}