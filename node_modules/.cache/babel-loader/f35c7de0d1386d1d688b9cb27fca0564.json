{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nguyen Cuong\\\\Desktop\\\\react-basic\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Routers from './routers';\nimport apiRequest from './api/productApi'; // import AddProduct from './components/AddProduct';\n\nfunction App() {\n  const [products, setProducts] = useState([apiRequest]);\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const {\n          data\n        } = await apiRequest.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log('failed to request API: ', error);\n      }\n    };\n\n    getProducts();\n  }, []); //Xóa sản phẩm\n\n  const onHandleRemove = id => {\n    const newProducts = products.filter(product => product.id !== id);\n    setProducts(newProducts);\n  }; //Thêm sản phẩm \n\n\n  const onHandleAdd = product => {\n    const newProduct = {\n      id: products.length + 1,\n      ...product\n    };\n    setProducts([...products, newProduct]);\n  }; //Chỉnh sửa sản phẩm\n\n\n  const onHandleEdit = updateProduct => {\n    const newProducts = products.map(product => product.id === updateProduct.id ? updateProduct : product // Nếu product.id = id sản phẩm thì chỉnh sửa, nếu không bằng thì trả về một mảng có object mới\n    );\n    localStorage.setItem('products', JSON.stringify(newProducts));\n    setProducts(newProducts);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Routers, {\n    products: products,\n    onRemove: onHandleRemove,\n    onAdd: onHandleAdd,\n    onEdit: onHandleEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Nguyen Cuong/Desktop/react-basic/src/App.js"],"names":["React","useState","useEffect","Routers","apiRequest","App","products","setProducts","getProducts","data","getAll","error","console","log","onHandleRemove","id","newProducts","filter","product","onHandleAdd","newProduct","length","onHandleEdit","updateProduct","map","localStorage","setItem","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,kBAAvB,C,CAEA;;AACA,SAASC,GAAT,GAAe;AAEb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,CAACG,UAAD,CAAD,CAAxC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,WAAW,GAAG,YAAY;AAC9B,UAAI;AACF,cAAM;AAAEC,UAAAA;AAAF,YAAW,MAAML,UAAU,CAACM,MAAX,EAAvB;AACAH,QAAAA,WAAW,CAACE,IAAD,CAAX;AACD,OAHD,CAGE,OAAOE,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAvC;AACD;AACF,KAPD;;AAQAH,IAAAA,WAAW;AACZ,GAVQ,EAUN,EAVM,CAAT,CAJa,CAgBb;;AACA,QAAMM,cAAc,GAAIC,EAAD,IAAQ;AAC7B,UAAMC,WAAW,GAAGV,QAAQ,CAACW,MAAT,CAAgBC,OAAO,IAAIA,OAAO,CAACH,EAAR,KAAeA,EAA1C,CAApB;AACAR,IAAAA,WAAW,CAACS,WAAD,CAAX;AACD,GAHD,CAjBa,CAsBb;;;AACA,QAAMG,WAAW,GAAID,OAAD,IAAa;AAC/B,UAAME,UAAU,GAAG;AACjBL,MAAAA,EAAE,EAAET,QAAQ,CAACe,MAAT,GAAkB,CADL;AAEjB,SAAGH;AAFc,KAAnB;AAIAX,IAAAA,WAAW,CAAC,CACV,GAAGD,QADO,EAEVc,UAFU,CAAD,CAAX;AAID,GATD,CAvBa,CAkCb;;;AACA,QAAME,YAAY,GAAKC,aAAF,IAAoB;AACvC,UAAMP,WAAW,GAAGV,QAAQ,CAACkB,GAAT,CAAaN,OAAO,IACtCA,OAAO,CAACH,EAAR,KAAeQ,aAAa,CAACR,EAA7B,GAAiCQ,aAAjC,GAAiDL,OADX,CACmB;AADvC,KAApB;AAGAO,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeZ,WAAf,CAAjC;AACAT,IAAAA,WAAW,CAACS,WAAD,CAAX;AACD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAEV,QAAnB;AAA6B,IAAA,QAAQ,EAAEQ,cAAvC;AAAuD,IAAA,KAAK,EAAEK,WAA9D;AAA2E,IAAA,MAAM,EAAEG,YAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAMD;;AACD,eAAejB,GAAf","sourcesContent":["import React, { useState,useEffect } from 'react';\r\nimport Routers from './routers'\r\nimport apiRequest from './api/productApi'\r\n\r\n// import AddProduct from './components/AddProduct';\r\nfunction App() {\r\n\r\n  const [products, setProducts] = useState([apiRequest]);\r\n\r\n  useEffect(() => {\r\n    const getProducts = async () => {\r\n      try {\r\n        const { data } = await apiRequest.getAll();\r\n        setProducts(data);\r\n      } catch (error) {\r\n        console.log('failed to request API: ', error)\r\n      }\r\n    }\r\n    getProducts();\r\n  }, []);\r\n\r\n  //Xóa sản phẩm\r\n  const onHandleRemove = (id) => {\r\n    const newProducts = products.filter(product => product.id !== id);\r\n    setProducts(newProducts);\r\n  }\r\n\r\n  //Thêm sản phẩm \r\n  const onHandleAdd = (product) => {\r\n    const newProduct = {\r\n      id: products.length + 1,\r\n      ...product\r\n    }\r\n    setProducts([\r\n      ...products,\r\n      newProduct\r\n    ])\r\n  }\r\n\r\n  //Chỉnh sửa sản phẩm\r\n  const onHandleEdit = ( updateProduct ) =>{\r\n    const newProducts = products.map(product => (\r\n      product.id === updateProduct.id? updateProduct : product // Nếu product.id = id sản phẩm thì chỉnh sửa, nếu không bằng thì trả về một mảng có object mới\r\n    ));\r\n    localStorage.setItem('products', JSON.stringify(newProducts))\r\n    setProducts(newProducts);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Routers products={products} onRemove={onHandleRemove} onAdd={onHandleAdd} onEdit={onHandleEdit}/>\r\n    </div>\r\n  )\r\n\r\n}\r\nexport default App;"]},"metadata":{},"sourceType":"module"}